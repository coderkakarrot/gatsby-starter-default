import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import { DrupalState } from '@pantheon/decoupled-node-sdk';

import styles from '../../styles/Home.module.css';

const drupalUrl = process.env.backendUrl;

// TODO - Much of this is duplicated in the article/[id].js file. Abstract this out into modules and components.
export default function Home({ page }) {
  return (
    <div className={styles.container}>
      <Head>
        <title>Decoupled Next Drupal Demo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="prose lg:prose-xl mt-10">
        <h1>
          {page.title}
        </h1>

        <Link passHref href="/">
          <span className="w-full underline cursor-pointer">Home &rarr;</span>
        </Link>

        <div className="mt-12 max-w-lg mx-auto lg:grid-cols-3 lg:max-w-screen-lg">
          <div dangerouslySetInnerHTML={{__html: page.body.value}} />
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export async function getStaticPaths(context) {
  const store = new DrupalState({
    apiRoot: `${drupalUrl}/en/jsonapi/`,
  });

  const pages = await store
    .getObject({
      objectName: 'node--page',
      query: `
        {
          id
          path {
            alias
          }
        }
      `
    });

  // Using the path alias here would be preferred but we'll first need to add
  // filter support to DrupalGraphqlLink.
  const paths = pages.map(page => {
    return { params: { id: page.id } };
  });

  return {
    paths,
    fallback: false,
  }
}

export async function getStaticProps({params}) {
  const store = new DrupalState({
    apiRoot: `${drupalUrl}/en/jsonapi/`,
  });

  const page = await store
    .getObject({
      objectName: 'node--page',
      id: params.id,
      query: `
        {
          id
          title
          body
          path {
            alias
          }
        }
      `
    });
  return {
    props: {
      page: page,
      revalidate: 60,
    },
  }
}
